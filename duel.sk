#------------------------------------------------
#
#			Auteur : WeBer_Le_Pecheur (mail : rouer69@hotmail.fr)
#			Pour : Mineskill
#			Requis : Skript
#			Testé sous : Skript 2.3-beta4, TuSke-1.8.3-v3
#
#------------------------------------------------
#
#			
#
#------------------------------------------------

options:
	
	commande.global : duel
	commande.admin : sduel
	
	permission.global : mineskill.duel.use
	permission.admin : mineskill.admin
	
	prefix.global : §e[§9Duel§e]
	prefix.debug : §e[§dDEBUG§e]
	prefix.erreur : §e[§4Erreur§e]
	
	gui.kit.titre : §3Choisissez votre kit
	gui.kit.nom : §dKit de %{duel::2::%{_i}%::1}%
	gui.kit.description : §9Clic pour choisir ce kit.
	
	message.permission : §cVous n'avez pas la permission d'utiliser cette commande.
	message.maintenance : §cLes duels sont en maintenance.
	
function PlayerData(player: player, type: text) :: boolean:
	{_type} is "save":
		add {_player} to {duel::3::*}
		loop {duel::3::*}:
			loop-value is {_player}
			set {duel::3::%loop-index%::1} to {_player}'s location
			set {duel::3::%loop-index%::2} to {_player}'s gamemode
			set {duel::3::%loop-index%::3} to {_player}'s health
			set {duel::3::%loop-index%::4} to {_player}'s food level
			# set {duel::3::%loop-index%::5} to {_player}'s potion effect	# TODO: Récupérer les données sur PotionEffect.LivingEntity
			loop 41 times:
				set {duel::3::%loop-index-1%::%(loop-number + 4)%} to slot (loop-number - 1) of {_player}'s inventory
			return true
			stop
	{_type} is "restore":
		loop {duel::3::*}:
			loop-value is {_player}
			teleport {_player} to {duel::3::%loop-index%::1}
			remove all potion effect from {_player}
			set {_player}'s gamemode to {duel::3::%loop-index%::2}
			set {_player}'s health to {duel::3::%loop-index%::3}
			set {_player}'s food level to {duel::3::%loop-index%::4}
			# set {_player}'s potion effect to {duel::3::%loop-index%::5}	# TODO: Récupérer les données sur PotionEffect.LivingEntity
			loop 41 times:
				set slot (loop-number - 1) of {_player}'s inventory to {duel::3::%loop-index-1%::%(loop-number + 4)%}
			return true
			stop
	{_type} contain "kit":
		set {_kit::*} to {_type} split by "||"
		loop {duel::2::*}:
			loop-index is {_kit::2}
			set {_player}'s gamemode to survival
			set {_player}'s health to 10
			set {_player}'s food level to 20
			loop 41 times:
				set slot (loop-number - 1) of {_player}'s inventory to {duel::2::%loop-index-1%::%(loop-number + 1)%}
			apply jump boost 250 to {_player} for 1 days
			apply slowness 250 to {_player} for 1 days
			apply blindness 250 to {_player} for 1 days
			apply resistance 250 to {_player} for 1 days
			return true
			stop
	return false	# Return false si le joueur/kit n'existe pas

function DuelState(player: player, state: number) :: boolean:
	{_state} = 0:
		{}
	{_state} = 1:
		set {_loop} to size of {duel::2::*}
		set {_size} to 1
		while {_pass} isn't set:	# TODO: Améliorer ce calcul
			{_loop} <= 9:
				set {_pass} to true
			else:
				remove 9 from {_loop}
				add 1 to {_size}
		open virtual chest inventory with size {_size} named "{@gui.kit.titre}" to {_player}
		loop {duel::2::*}:
			set {_i} to loop-index parsed as number
			make gui slot ({_i} - 1) of {_player} with {duel::2::%{_i}%::2} named "{@gui.kit.nom}" with lore "§r" and "{@gui.kit.description}" to run:
				return PlayerData({_player}, "kit||%{_i}%")

command /{@commande.global} <player> [<text>]:
	usage: §9{@commande.global} §6<pseudo>
	permission: {@permission.global}
	permission message: {@message.permission}
	trigger:
		
				